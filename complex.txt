{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_s2s_name": {
            "defaultValue": "s2s",
            "type": "String"
        },
        "connections_s2s_vpn_name": {
            "defaultValue": "s2s-vpn",
            "type": "String"
        },
        "virtualMachines_ntmsvm1_name": {
            "defaultValue": "ntmsvm1",
            "type": "String"
        },
        "virtualMachines_ntmsvm2_name": {
            "defaultValue": "ntmsvm2",
            "type": "String"
        },
        "virtualMachines_ntmsvm3_name": {
            "defaultValue": "ntmsvm3",
            "type": "String"
        },
        "virtualMachines_ntmsvm4_name": {
            "defaultValue": "ntmsvm4",
            "type": "String"
        },
        "virtualMachines_ntmsvm5_name": {
            "defaultValue": "ntmsvm5",
            "type": "String"
        },
        "virtualMachines_ntmsvm6_name": {
            "defaultValue": "ntmsvm6",
            "type": "String"
        },
        "localNetworkGateways_LNG_name": {
            "defaultValue": "LNG",
            "type": "String"
        },
        "virtualNetworks_Hub1VNET_name": {
            "defaultValue": "Hub1VNET",
            "type": "String"
        },
        "virtualNetworks_Hub2VNET_name": {
            "defaultValue": "Hub2VNET",
            "type": "String"
        },
        "virtualNetworks_Spoke1VNET_name": {
            "defaultValue": "Spoke1VNET",
            "type": "String"
        },
        "virtualNetworks_Spoke2VNET_name": {
            "defaultValue": "Spoke2VNET",
            "type": "String"
        },
        "virtualNetworks_Spoke3VNET_name": {
            "defaultValue": "Spoke3VNET",
            "type": "String"
        },
        "virtualNetworks_Spoke4VNET_name": {
            "defaultValue": "Spoke4VNET",
            "type": "String"
        },
        "networkInterfaces_ntmsvm1nic_name": {
            "defaultValue": "ntmsvm1nic",
            "type": "String"
        },
        "networkInterfaces_ntmsvm2nic_name": {
            "defaultValue": "ntmsvm2nic",
            "type": "String"
        },
        "networkInterfaces_ntmsvm3nic_name": {
            "defaultValue": "ntmsvm3nic",
            "type": "String"
        },
        "networkInterfaces_ntmsvm4nic_name": {
            "defaultValue": "ntmsvm4nic",
            "type": "String"
        },
        "networkInterfaces_ntmsvm5nic_name": {
            "defaultValue": "ntmsvm5nic",
            "type": "String"
        },
        "networkInterfaces_ntmsvm6nic_name": {
            "defaultValue": "ntmsvm6nic",
            "type": "String"
        },
        "bastionHosts_Hub1VNET_bastion_name": {
            "defaultValue": "Hub1VNET-bastion",
            "type": "String"
        },
        "publicIPAddresses_Hub1VNET_ip_name": {
            "defaultValue": "Hub1VNET-ip",
            "type": "String"
        },
        "publicIPAddresses_vm1PublicIP_name": {
            "defaultValue": "vm1PublicIP",
            "type": "String"
        },
        "publicIPAddresses_vm2PublicIP_name": {
            "defaultValue": "vm2PublicIP",
            "type": "String"
        },
        "publicIPAddresses_vm3PublicIP_name": {
            "defaultValue": "vm3PublicIP",
            "type": "String"
        },
        "publicIPAddresses_vm4PublicIP_name": {
            "defaultValue": "vm4PublicIP",
            "type": "String"
        },
        "publicIPAddresses_vm5PublicIP_name": {
            "defaultValue": "vm5PublicIP",
            "type": "String"
        },
        "publicIPAddresses_vm6PublicIP_name": {
            "defaultValue": "vm6PublicIP",
            "type": "String"
        },
        "workspaces_ntmsla_name": {
            "defaultValue": "ntmsla",
            "type": "String"
        },
        "connections_vng1_vng2_vnet_vpn_name": {
            "defaultValue": "vng1-vng2-vnet-vpn",
            "type": "String"
        },
        "connections_vng2_vng1_vnet_vpn_name": {
            "defaultValue": "vng2-vng1-vnet-vpn",
            "type": "String"
        },
        "publicIPAddresses_hub1_vng_pip_name": {
            "defaultValue": "hub1-vng-pip",
            "type": "String"
        },
        "publicIPAddresses_hub2_vng_pip_name": {
            "defaultValue": "hub2-vng-pip",
            "type": "String"
        },
        "networkSecurityGroups_NTMS_NSG1_name": {
            "defaultValue": "NTMS-NSG1",
            "type": "String"
        },
        "networkSecurityGroups_NTMS_NSG2_name": {
            "defaultValue": "NTMS-NSG2",
            "type": "String"
        },
        "networkSecurityGroups_NTMS_NSG3_name": {
            "defaultValue": "NTMS-NSG3",
            "type": "String"
        },
        "networkSecurityGroups_NTMS_NSG4_name": {
            "defaultValue": "NTMS-NSG4",
            "type": "String"
        },
        "networkSecurityGroups_NTMS_NSG5_name": {
            "defaultValue": "NTMS-NSG5",
            "type": "String"
        },
        "networkSecurityGroups_NTMS_NSG6_name": {
            "defaultValue": "NTMS-NSG6",
            "type": "String"
        },
        "virtualNetworkGateways_hub1_vng_name": {
            "defaultValue": "hub1-vng",
            "type": "String"
        },
        "virtualNetworkGateways_hub2_vng_name": {
            "defaultValue": "hub2-vng",
            "type": "String"
        },
        "localNetworkGateways_onprem_lng1_name": {
            "defaultValue": "onprem-lng1",
            "type": "String"
        },
        "storageAccounts_a5aepodj7f22khub1ntms_name": {
            "defaultValue": "a5aepodj7f22khub1ntms",
            "type": "String"
        },
        "storageAccounts_a5aepodj7f22khub2ntms_name": {
            "defaultValue": "a5aepodj7f22khub2ntms",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "apiVersion": "2019-09-01",
            "name": "[parameters('localNetworkGateways_LNG_name')]",
            "location": "eastus",
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "192.168.10.0/24"
                    ]
                },
                "gatewayIpAddress": "49.32.19.235"
            }
        },
        {
            "type": "Microsoft.Network/localNetworkGateways",
            "apiVersion": "2019-09-01",
            "name": "[parameters('localNetworkGateways_onprem_lng1_name')]",
            "location": "eastus",
            "properties": {
                "localNetworkAddressSpace": {
                    "addressPrefixes": [
                        "192.168.10.0/24"
                    ]
                },
                "gatewayIpAddress": "49.32.19.235"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkSecurityGroups_NTMS_NSG1_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkSecurityGroups_NTMS_NSG2_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-3389",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_3389",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkSecurityGroups_NTMS_NSG3_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-3389",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkSecurityGroups_NTMS_NSG4_name')]",
            "location": "westus",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-3389",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkSecurityGroups_NTMS_NSG5_name')]",
            "location": "westus",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-3389",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkSecurityGroups_NTMS_NSG6_name')]",
            "location": "westus",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-3389",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIPAddresses_Hub1VNET_ip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "ipAddress": "52.188.137.118",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIPAddresses_hub1_vng_pip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "52.179.98.247",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIPAddresses_hub2_vng_pip_name')]",
            "location": "westus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "40.83.222.29",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIPAddresses_vm1PublicIP_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "13.92.155.18",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIPAddresses_vm2PublicIP_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "13.92.155.174",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIPAddresses_vm3PublicIP_name')]",
            "location": "eastus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "13.72.66.246",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIPAddresses_vm4PublicIP_name')]",
            "location": "westus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "23.101.206.61",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIPAddresses_vm5PublicIP_name')]",
            "location": "westus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "104.40.53.108",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-09-01",
            "name": "[parameters('publicIPAddresses_vm6PublicIP_name')]",
            "location": "westus",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "ipAddress": "104.40.50.174",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[parameters('workspaces_ntmsla_name')]",
            "location": "eastus",
            "properties": {
                "provisioningState": "Succeeded",
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_a5aepodj7f22khub1ntms_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_a5aepodj7f22khub2ntms_name')]",
            "location": "westus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('networkSecurityGroups_NTMS_NSG2_name'), '/default-allow-3389')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG2_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('networkSecurityGroups_NTMS_NSG3_name'), '/default-allow-3389')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG3_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('networkSecurityGroups_NTMS_NSG4_name'), '/default-allow-3389')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG4_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('networkSecurityGroups_NTMS_NSG5_name'), '/default-allow-3389')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG5_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('networkSecurityGroups_NTMS_NSG6_name'), '/default-allow-3389')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG6_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1000,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('networkSecurityGroups_NTMS_NSG2_name'), '/Port_3389')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG2_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "3389",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Hub1VNET_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.10.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Hub1VNET_name'), '/GatewaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Hub2VNET_name'), '/GatewaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.4.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_General|AlphabeticallySortedComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "All Computers with their most recent data",
                "Category": "General Exploration",
                "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize AggregatedValue = max(TimeGenerated) by Computer | limit 500000 | sort by Computer asc\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) by Computer | top 500000 | Sort Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_General|dataPointsPerManagementGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Which Management Group is generating the most data points?",
                "Category": "General Exploration",
                "Query": "search * | summarize AggregatedValue = count() by ManagementGroupName\r\n// Oql: * | Measure count() by ManagementGroupName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_General|dataTypeDistribution')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Distribution of data Types",
                "Category": "General Exploration",
                "Query": "search * | extend Type = $table | summarize AggregatedValue = count() by Type\r\n// Oql: * | Measure count() by Type // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_General|StaleComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Stale Computers (data older than 24 hours)",
                "Category": "General Exploration",
                "Query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize lastdata = max(TimeGenerated) by Computer | limit 500000 | where lastdata < ago(24h)\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) as lastdata by Computer | top 500000 | where lastdata < NOW-24HOURS // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|AllEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "All Events",
                "Category": "Log Management",
                "Query": "Event | sort by TimeGenerated desc\r\n// Oql: Type=Event // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|AllSyslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslogs",
                "Category": "Log Management",
                "Query": "Syslog | sort by TimeGenerated desc\r\n// Oql: Type=Syslog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|AllSyslogByFacility')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records grouped by Facility",
                "Category": "Log Management",
                "Query": "Syslog | summarize AggregatedValue = count() by Facility\r\n// Oql: Type=Syslog | Measure count() by Facility // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|AllSyslogByProcessName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records grouped by ProcessName",
                "Category": "Log Management",
                "Query": "Syslog | summarize AggregatedValue = count() by ProcessName\r\n// Oql: Type=Syslog | Measure count() by ProcessName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|AllSyslogsWithErrors')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "All Syslog Records with Errors",
                "Category": "Log Management",
                "Query": "Syslog | where SeverityLevel == \"error\" | sort by TimeGenerated desc\r\n// Oql: Type=Syslog SeverityLevel=error // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|AverageHTTPRequestTimeByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Average HTTP Request time by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by cIP\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|AverageHTTPRequestTimeHTTPMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Average HTTP Request time by HTTP Method",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by csMethod\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|CountIISLogEntriesClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by cIP\r\n// Oql: Type=W3CIISLog | Measure count() by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|CountIISLogEntriesHTTPRequestMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by HTTP Request Method",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csMethod\r\n// Oql: Type=W3CIISLog | Measure count() by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|CountIISLogEntriesHTTPUserAgent')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by HTTP User Agent",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUserAgent\r\n// Oql: Type=W3CIISLog | Measure count() by csUserAgent // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|CountOfIISLogEntriesByHostRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by Host requested by client",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csHost\r\n// Oql: Type=W3CIISLog | Measure count() by csHost // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|CountOfIISLogEntriesByURLForHost')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by URL for the host \"www.contoso.com\" (replace with your own)",
                "Category": "Log Management",
                "Query": "search csHost == \"www.contoso.com\" | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog csHost=\"www.contoso.com\" | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|CountOfIISLogEntriesByURLRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of IIS Log Entries by URL requested by client (without query strings)",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|CountOfWarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events with level \"Warning\" grouped by Event ID",
                "Category": "Log Management",
                "Query": "Event | where EventLevelName == \"warning\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event EventLevelName=warning | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|DisplayBreakdownRespondCodes')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows breakdown of response codes",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by scStatus\r\n// Oql: Type=W3CIISLog | Measure count() by scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|EventsByEventLog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event Log",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by EventLog\r\n// Oql: Type=Event | Measure count() by EventLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|EventsByEventsID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event ID",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|EventsByEventSource')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events grouped by Event Source",
                "Category": "Log Management",
                "Query": "Event | summarize AggregatedValue = count() by Source\r\n// Oql: Type=Event | Measure count() by Source // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|EventsInOMBetween2000to3000')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Events in the Operations Manager Event Log whose Event ID is in the range between 2000 and 3000",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Operations Manager\" and EventID >= 2000 and EventID <= 3000 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Operations Manager\" EventID:[2000..3000] // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|EventsWithStartedinEventID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Count of Events containing the word \"started\" grouped by EventID",
                "Category": "Log Management",
                "Query": "search in (Event) \"started\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event \"started\" | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|FindMaximumTimeTakenForEachPage')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Find the maximum time taken for each page",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = max(TimeTaken) by csUriStem\r\n// Oql: Type=W3CIISLog | Measure Max(TimeTaken) by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|IISLogEntriesForClientIP')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "IIS Log Entries for a specific client IP Address (replace with your own)",
                "Category": "Log Management",
                "Query": "search cIP == \"192.168.0.1\" | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc | project csUriStem, scBytes, csBytes, TimeTaken, scStatus\r\n// Oql: Type=W3CIISLog cIP=\"192.168.0.1\" | Select csUriStem,scBytes,csBytes,TimeTaken,scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|ListAllIISLogEntries')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "All IIS Log Entries",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc\r\n// Oql: Type=W3CIISLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|NoOfConnectionsToOMSDKService')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "How many connections to Operations Manager's SDK service by day",
                "Category": "Log Management",
                "Query": "Event | where EventID == 26328 and EventLog == \"Operations Manager\" | summarize AggregatedValue = count() by bin(TimeGenerated, 1d) | sort by TimeGenerated desc\r\n// Oql: Type=Event EventID=26328 EventLog=\"Operations Manager\" | Measure count() interval 1DAY // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|ServerRestartTime')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "When did my servers initiate restart?",
                "Category": "Log Management",
                "Query": "search in (Event) \"shutdown\" and EventLog == \"System\" and Source == \"User32\" and EventID == 1074 | sort by TimeGenerated desc | project TimeGenerated, Computer\r\n// Oql: shutdown Type=Event EventLog=System Source=User32 EventID=1074 | Select TimeGenerated,Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|Show404PagesList')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows which pages people are getting a 404 for",
                "Category": "Log Management",
                "Query": "search scStatus == 404 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog scStatus=404 | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|ShowServersThrowingInternalServerError')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Shows servers that are throwing internal server error",
                "Category": "Log Management",
                "Query": "search scStatus == 500 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by sComputerName\r\n// Oql: Type=W3CIISLog scStatus=500 | Measure count() by sComputerName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|TotalBytesReceivedByEachAzureRoleInstance')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes received by each Azure Role Instance",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by RoleInstance\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by RoleInstance // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|TotalBytesReceivedByEachIISComputer')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes received by each IIS Computer",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by Computer | limit 500000\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|TotalBytesRespondedToClientsByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes responded back to clients by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes responded back to clients by each IIS ServerIP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by sIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by sIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|TotalBytesSentByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Total Bytes sent by Client IP Address",
                "Category": "Log Management",
                "Query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|WarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "All Events with level \"Warning\"",
                "Category": "Log Management",
                "Query": "Event | where EventLevelName == \"warning\" | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLevelName=warning // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|WindowsFireawallPolicySettingsChanged')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "Windows Firewall Policy settings have changed",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2015-03-20",
            "name": "[concat(parameters('workspaces_ntmsla_name'), '/LogManagement(', parameters('workspaces_ntmsla_name'), ')_LogManagement|WindowsFireawallPolicySettingsChangedByMachines')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_ntmsla_name'))]"
            ],
            "properties": {
                "DisplayName": "On which machines and how many times have Windows Firewall Policy settings changed",
                "Category": "Log Management",
                "Query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | summarize AggregatedValue = count() by Computer | limit 500000\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 | measure count() by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "Version": 2
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_ntmsvm1_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm1nic_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS2_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_ntmsvm1_name'), '_OsDisk_1_1742c3b7d6674deb89bb84d0fffabc4f')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_ntmsvm1_name'), '_OsDisk_1_1742c3b7d6674deb89bb84d0fffabc4f'))]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_ntmsvm1_name')]",
                    "adminUsername": "vmadmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm1nic_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_ntmsvm2_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm2nic_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_ntmsvm2_name'), '_OsDisk_1_7d292821f2fa4df5ab7d0c3e223a1b84')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_ntmsvm2_name'), '_OsDisk_1_7d292821f2fa4df5ab7d0c3e223a1b84'))]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_ntmsvm2_name')]",
                    "adminUsername": "vmadmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm2nic_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_ntmsvm3_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm3nic_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_ntmsvm3_name'), '_OsDisk_1_0350437376294a8b93532c99fd695f8d')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_ntmsvm3_name'), '_OsDisk_1_0350437376294a8b93532c99fd695f8d'))]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_ntmsvm3_name')]",
                    "adminUsername": "vmadmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm3nic_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_ntmsvm4_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm4nic_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_ntmsvm4_name'), '_OsDisk_1_1c4e6f4de9924bff8ded759639f392cb')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_ntmsvm4_name'), '_OsDisk_1_1c4e6f4de9924bff8ded759639f392cb'))]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_ntmsvm4_name')]",
                    "adminUsername": "vmadmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm4nic_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_ntmsvm5_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm5nic_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D1"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_ntmsvm5_name'), '_OsDisk_1_a6a4b990293446999bc0525d313dfb36')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_ntmsvm5_name'), '_OsDisk_1_a6a4b990293446999bc0525d313dfb36'))]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_ntmsvm5_name')]",
                    "adminUsername": "vmadmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm5nic_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[parameters('virtualMachines_ntmsvm6_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm6nic_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D1"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(parameters('virtualMachines_ntmsvm6_name'), '_OsDisk_1_c1716237dc834f62b2d11c3c369fcaf5')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_ntmsvm6_name'), '_OsDisk_1_c1716237dc834f62b2d11c3c369fcaf5'))]"
                        },
                        "diskSizeGB": 127
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachines_ntmsvm6_name')]",
                    "adminUsername": "vmadmin",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_ntmsvm6nic_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2019-09-01",
            "name": "[parameters('bastionHosts_Hub1VNET_bastion_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Hub1VNET_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Hub1VNET_name'), 'AzureBastionSubnet')]"
            ],
            "properties": {
                "dnsName": "bst-1dd79dc9-f685-4877-9823-d8721d8633ac.bastion.azure.com",
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_Hub1VNET_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Hub1VNET_name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2019-09-01",
            "name": "[parameters('connections_s2s_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub2_vng_name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localNetworkGateways_LNG_name'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub2_vng_name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localNetworkGateways_LNG_name'))]"
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "enableBgp": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "expressRouteGatewayBypass": false
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2019-09-01",
            "name": "[parameters('connections_s2s_vpn_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub1_vng_name'))]",
                "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localNetworkGateways_LNG_name'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub1_vng_name'))]"
                },
                "localNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/localNetworkGateways', parameters('localNetworkGateways_LNG_name'))]"
                },
                "connectionType": "IPsec",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "enableBgp": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "expressRouteGatewayBypass": false
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2019-09-01",
            "name": "[parameters('connections_vng1_vng2_vnet_vpn_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub1_vng_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub2_vng_name'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub1_vng_name'))]"
                },
                "virtualNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub2_vng_name'))]"
                },
                "connectionType": "Vnet2Vnet",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "enableBgp": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "expressRouteGatewayBypass": false
            }
        },
        {
            "type": "Microsoft.Network/connections",
            "apiVersion": "2019-09-01",
            "name": "[parameters('connections_vng2_vng1_vnet_vpn_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub2_vng_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub1_vng_name'))]"
            ],
            "properties": {
                "virtualNetworkGateway1": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub2_vng_name'))]"
                },
                "virtualNetworkGateway2": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_hub1_vng_name'))]"
                },
                "connectionType": "Vnet2Vnet",
                "connectionProtocol": "IKEv2",
                "routingWeight": 0,
                "enableBgp": false,
                "usePolicyBasedTrafficSelectors": false,
                "ipsecPolicies": [],
                "trafficSelectorPolicies": [],
                "expressRouteGatewayBypass": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkInterfaces_ntmsvm1nic_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm1PublicIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Hub1VNET_name'), 'Subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.1.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm1PublicIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Hub1VNET_name'), 'Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkInterfaces_ntmsvm2nic_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm2PublicIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Spoke1VNET_name'), 'Subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.2.1.44",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm2PublicIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Spoke1VNET_name'), 'Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "10.1.1.4"
                    ]
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkInterfaces_ntmsvm3nic_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm3PublicIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Spoke2VNET_name'), 'Subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.3.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm3PublicIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Spoke2VNET_name'), 'Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "10.1.1.4"
                    ]
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkInterfaces_ntmsvm4nic_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm4PublicIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Hub2VNET_name'), 'Subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.4.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm4PublicIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Hub2VNET_name'), 'Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "10.1.1.4"
                    ]
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkInterfaces_ntmsvm5nic_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm5PublicIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Spoke3VNET_name'), 'Subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.5.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm5PublicIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Spoke3VNET_name'), 'Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "10.4.1.4"
                    ]
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-09-01",
            "name": "[parameters('networkInterfaces_ntmsvm6nic_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm6PublicIP_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Spoke4VNET_name'), 'Subnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.6.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vm6PublicIP_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Spoke4VNET_name'), 'Subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [
                        "10.4.1.4"
                    ]
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2019-09-01",
            "name": "[parameters('virtualNetworkGateways_hub1_vng_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_hub1_vng_pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Hub1VNET_name'), 'GatewaySubnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "default",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_hub1_vng_pip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Hub1VNET_name'), 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": false,
                "vpnClientConfiguration": {
                    "vpnClientProtocols": [
                        "OpenVPN",
                        "IkeV2"
                    ],
                    "vpnClientRootCertificates": [],
                    "vpnClientRevokedCertificates": [],
                    "vpnClientIpsecPolicies": []
                },
                "bgpSettings": {
                    "asn": 65515,
                    "bgpPeeringAddress": "10.1.0.254",
                    "peerWeight": 0
                },
                "vpnGatewayGeneration": "Generation1"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2019-09-01",
            "name": "[parameters('virtualNetworkGateways_hub2_vng_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_hub2_vng_pip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Hub2VNET_name'), 'GatewaySubnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "default",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_hub2_vng_pip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_Hub2VNET_name'), 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": false,
                "vpnClientConfiguration": {
                    "vpnClientProtocols": [
                        "OpenVPN",
                        "IkeV2"
                    ],
                    "vpnClientRootCertificates": [],
                    "vpnClientRevokedCertificates": [],
                    "vpnClientIpsecPolicies": []
                },
                "bgpSettings": {
                    "asn": 65515,
                    "bgpPeeringAddress": "10.4.0.254",
                    "peerWeight": 0
                },
                "vpnGatewayGeneration": "Generation1"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[parameters('virtualNetworks_Spoke1VNET_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG2_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "Subnet",
                        "properties": {
                            "addressPrefix": "10.2.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG2_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "spoke1vnet_to_hub1vnet",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[parameters('virtualNetworks_Spoke2VNET_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG3_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "Subnet",
                        "properties": {
                            "addressPrefix": "10.3.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG3_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "spok2vnet_to_hub1vnet",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[parameters('virtualNetworks_Spoke3VNET_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG5_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.5.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "Subnet",
                        "properties": {
                            "addressPrefix": "10.5.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG5_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "spoke3vnet_to_hub2vnet",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.4.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[parameters('virtualNetworks_Spoke4VNET_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG6_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.6.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "Subnet",
                        "properties": {
                            "addressPrefix": "10.6.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG6_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "spoke4vnet_to_hub2vnet",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": true,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.4.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Hub1VNET_name'), '/Subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG1_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.1.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG1_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Hub2VNET_name'), '/Subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG4_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.4.1.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG4_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Spoke1VNET_name'), '/Subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke1VNET_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG2_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.2.1.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG2_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Spoke2VNET_name'), '/Subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke2VNET_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG3_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.3.1.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG3_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Spoke3VNET_name'), '/Subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke3VNET_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG5_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.5.1.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG5_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Spoke4VNET_name'), '/Subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke4VNET_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG6_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.6.1.0/24",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG6_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Hub1VNET_name'), '/', parameters('virtualNetworks_Hub1VNET_name'), '_to_spoke1vnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke1VNET_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke1VNET_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Hub1VNET_name'), '/', parameters('virtualNetworks_Hub1VNET_name'), '_to_spoke2vnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke2VNET_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke2VNET_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.3.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Hub2VNET_name'), '/', parameters('virtualNetworks_Hub2VNET_name'), '_to_spoke3vnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke3VNET_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke3VNET_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.5.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Hub2VNET_name'), '/', parameters('virtualNetworks_Hub2VNET_name'), '_to_spoke4vnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke4VNET_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke4VNET_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.6.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Spoke2VNET_name'), '/spok2vnet_to_hub1vnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke2VNET_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Spoke1VNET_name'), '/', parameters('virtualNetworks_Spoke1VNET_name'), '_to_hub1vnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke1VNET_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub1VNET_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Spoke3VNET_name'), '/', parameters('virtualNetworks_Spoke3VNET_name'), '_to_hub2vnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke3VNET_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.4.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-09-01",
            "name": "[concat(parameters('virtualNetworks_Spoke4VNET_name'), '/', parameters('virtualNetworks_Spoke4VNET_name'), '_to_hub2vnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke4VNET_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Hub2VNET_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.4.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), '/default/bootdiagnostics-ntmsvm1-763403ea-3038-4eb0-bfc7-d1326eb1c538')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), '/default/bootdiagnostics-ntmsvm2-496a0af7-1d99-4b84-ac6f-7d9ad0d00a5e')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), '/default/bootdiagnostics-ntmsvm3-03e15c1b-1d7f-43ce-9a9a-72c1954f603d')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), '/default/bootdiagnostics-ntmsvm4-b3519c01-fc57-438b-af09-704ee4b4dcac')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), '/default/bootdiagnostics-ntmsvm5-09389f48-dbd9-4262-9ea0-7c1d9e811b32')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), '/default/bootdiagnostics-ntmsvm6-dacce982-3303-4ad3-a84f-058b9f4cd66f')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), '/default/insights-logs-networksecuritygroupflowevent')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), '/default/insights-logs-networksecuritygroupflowevent')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), '/default/troubleshoot')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), '/default/vpn')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub1ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), '/default/vpn')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_a5aepodj7f22khub2ntms_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[parameters('virtualNetworks_Hub1VNET_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG1_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke1VNET_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke2VNET_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "Subnet",
                        "properties": {
                            "addressPrefix": "10.1.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG1_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "10.1.10.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "hub1vnet_to_spoke1vnet",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke1VNET_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": true,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            }
                        }
                    },
                    {
                        "name": "hub1vnet_to_spoke2vnet",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke2VNET_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.3.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[parameters('virtualNetworks_Hub2VNET_name')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG4_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke3VNET_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke4VNET_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.4.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "Subnet",
                        "properties": {
                            "addressPrefix": "10.4.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_NTMS_NSG4_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "10.4.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "hub2vnet_to_spoke3vnet",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke3VNET_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": true,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.5.0.0/16"
                                ]
                            }
                        }
                    },
                    {
                        "name": "hub2vnet_to_spoke4vnet",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_Spoke4VNET_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": true,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.6.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        }
    ]
}